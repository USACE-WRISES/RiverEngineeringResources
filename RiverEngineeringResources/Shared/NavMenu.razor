@inject SharedData SharedData
@inject ISnackbar SnackbarService

@*<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <MudNavLink Href="fetchdata" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Fetch data</MudNavLink>
    <MudNavLink Href="counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Resources</MudNavLink>

    <MudNavGroup Title="Documents" Expanded="true">
        <MudNavLink>Knowledge Base</MudNavLink>
        <MudNavLink>Evaluation</MudNavLink>
    </MudNavGroup>
</MudNavMenu>*@

@*<div class="d-flex flex-grow-1 flex-wrap px-8 pb-8 pt-2">
    <div>
        <div class="d-block pa-2 mud-theme-primary">d-block</div>
        <div class="d-block pa-2 mud-theme-dark">d-block</div>
    </div>
</div>*@

<div class="d-flex flex-grow-1 flex-wrap px-8 py-2">

    <a href="" class="d-flex me-4">
        <MudIcon Color="Color.Primary" class="me-1" Size="Size.Large" Icon="@Icons.Material.Outlined.WaterDrop"></MudIcon>
        <MudText Style="font-family:Arial, Helvetica, sans-serif" Color="Color.Primary" Typo="Typo.h6">River Engineering Resources</MudText>
    </a>


    @*<a type="button" href="resources3" class="@resBtnStyleValue()" _bl_34=""><span class="mud-button-label">Resources3</span></a>*@

    <a type="button" href="engineering" class="@res2BtnStyleValue()" _bl_34=""><span class="mud-button-label">Engineering</span></a>

    @* <a type="button" href="submit" class="@submitBtnStyleValue()" _bl_34=""><span class="mud-button-label">Submit</span></a> *@

    <a type="button" href="assessment" class="@submitBtnStyleValue()" _bl_34=""><span class="mud-button-label">Assessment</span></a>

    <a type="button" href="staf" class="@stafBtnStyleValue()" _bl_34=""><span class="mud-button-label">STAF</span></a>

    @* <a type="button" href="pce" class="@stafBtnStyleValue()" _bl_34=""><span class="mud-button-label">PCE</span></a> *@

    @*<a type="button" href="spreadsheet" class="@res2BtnStyleValue()" _bl_34=""><span class="mud-button-label">Spreadsheet</span></a>*@


    @*<a type="button" href="/" class="@submitBtnStyleValue()" onclick="@submitPageClicked" _bl_34=""><span class="mud-button-label">Submit</span></a>*@

</div>

<MudDivider DividerType="DividerType.FullWidth" Class="ma-0 pa-0">

</MudDivider>
@*
    <div class="d-flex flex-grow-1 flex-wrap px-8 pb-8 pt-2">
    <a href="/" class="d-flex me-4">
    <MudIcon Color="Color.Primary" class="me-1" Size="Size.Large" Icon="@Icons.Material.Outlined.WaterDrop"></MudIcon>
    <MudText Style="font-family:Arial, Helvetica, sans-serif" Color="Color.Primary" Typo="Typo.h6">River Engineering Resources</MudText>
    </a>
    </div>

    <MudButton Style="text-transform:none; font-weight:normal;  font-size:medium; font-family:Arial, Helvetica, sans-serif" Href="submit" Variant="Variant.Text" Size="Size.Medium" Class="mx-1 px-3">Submit</MudButton>*@


@*@inject NavigationManager navManager
@implements IDisposable

protected override void OnInitialized()
{
    navManager.LocationChanged += LocationChanged;
    base.OnInitialized();
}

void LocationChanged(object sender, LocationChangedEventArgs e)
{
    IsTaskCancelled = true;
}

async Task RefreshPage()
{
    while (IsTaskCancelled == false)
    {
        await InvokeAsync(async () =>
        {
            await myService.GetLatestData();
            StateHasChanged();
        });

        await Task.Delay(3000);
    }

    Console.WriteLine("Ended Data Collection.");
}

public void Dispose()
{
    IsTaskCancelled = true;
    Console.WriteLine("Disposed.");
}*@

@code {

    protected override void OnInitialized()
    {
        SharedData.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        SharedData.OnChange -= StateHasChanged;
    }

}



@code
{
    //private bool _val = false;
    bool submitPageClickedBool = false;
    //bool resPageClickedBool = false;


    private string resBtnStyleValue()
    {
        if (SharedData.EngineeringPageSelected == false)
        {
            return "mud-button-root mud-button mud-button-text mud-button-text-inherit mud-button-text-size-medium mud-ripple mx-1 px-3";
        }
        else
        {
            return "mud-button-root mud-button mud-button-text mud-button-text-inherit mud-button-text-size-medium mud-ripple mud-chip-text mud-chip-color-primary mx-1 px-3";
        }
    }
    private string submitBtnStyleValue()
    {
        if (SharedData.AssessmentPageSelected == false)
        {
            return "mud-button-root mud-button mud-button-text mud-button-text-inherit mud-button-text-size-medium mud-ripple mx-1 px-3";
        }
        else
        {
            return "mud-button-root mud-button mud-button-text mud-button-text-inherit mud-button-text-size-medium mud-ripple mud-chip-text mud-chip-color-primary mx-1 px-3";
        }
    }

    private string stafBtnStyleValue()
    {
        if (SharedData.STAFPageSelected == false)
        {
            return "mud-button-root mud-button mud-button-text mud-button-text-inherit mud-button-text-size-medium mud-ripple mx-1 px-3";
        }
        else
        {
            return "mud-button-root mud-button mud-button-text mud-button-text-inherit mud-button-text-size-medium mud-ripple mud-chip-text mud-chip-color-primary mx-1 px-3";
        }
    }

    private string res2BtnStyleValue()
    {
        if (SharedData.Resources2PageSelected == false)
        {
            return "mud-button-root mud-button mud-button-text mud-button-text-inherit mud-button-text-size-medium mud-ripple mx-1 px-3";
        }
        else
        {
            return "mud-button-root mud-button mud-button-text mud-button-text-inherit mud-button-text-size-medium mud-ripple mud-chip-text mud-chip-color-primary mx-1 px-3";
        }
    }



}
